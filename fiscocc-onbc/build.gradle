group 'fiscocc-onbc'
version '1.0'

apply plugin: 'maven'
apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

// In this section you declare where to find the dependencies of your project
repositories {
    maven {
        //url "http://maven.weoa.com/nexus/content/groups/public/"
        url "http://maven.aliyun.com/nexus/content/groups/public/"
    }

    mavenLocal()
    mavenCentral()
}

def spring_version="4.3.18.RELEASE"
List spring =[ 
	"org.springframework:spring-core:$spring_version", 
	"org.springframework:spring-beans:$spring_version", 
	"org.springframework:spring-context:$spring_version", 
	"org.springframework:spring-tx:$spring_version", 
	"org.springframework:spring-jdbc:$spring_version", 
	"org.springframework:spring-test:$spring_version",
	"org.springframework:spring-context-support:$spring_version",
	"org.springframework:spring-web:$spring_version",
	"org.springframework:spring-webmvc:$spring_version"
]

List spring_boot =[ 
	"org.springframework.boot:spring-boot-starter-web:1.5.12.RELEASE",
	"org.springframework.boot:spring-boot-autoconfigure:1.5.12.RELEASE",
	"org.springframework.boot:spring-boot-configuration-processor:1.5.12.RELEASE",
	"org.springframework.boot:spring-boot-starter-log4j2:1.5.12.RELEASE",
	"org.slf4j:jcl-over-slf4j:1.7.12"
]

List guava = [
	'com.google.guava:guava:19.0'
]

List netty = [
	'io.netty:netty-all:4.1.15.Final',
	'io.netty:netty-tcnative:2.0.18.Final'
]

List mysql = [
	//支持mysql 5.6
	'mysql:mysql-connector-java:5.1.30'
	//支持mysql8
	//'mysql:mysql-connector-java:5.1.44'
]

List mybatis = [
	'org.mybatis:mybatis:3.2.8',
	//'org.mybatis:mybatis-spring:1.2.2'
	'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1'
]

List alibaba = [
        //'com.alibaba:druid:1.0.29',
		'com.alibaba:druid-spring-boot-starter:1.1.10',
        'com.alibaba:fastjson:1.2.29'
]

// In this section you declare the dependencies for your production and test code
dependencies {
    compile spring,guava,netty,mysql,mybatis,alibaba,spring_boot
    runtime spring,guava,netty,mysql,mybatis,alibaba,spring_boot
    
    compile "com.fasterxml.jackson.core:jackson-databind:2.9.6"
    runtime "com.fasterxml.jackson.core:jackson-databind:2.9.6"
   	compile 'org.quartz-scheduler:quartz:2.3.0'
   	runtime 'org.quartz-scheduler:quartz:2.3.0'
   	compile 'com.lmax:disruptor:3.3.7'
   	runtime 'com.lmax:disruptor:3.3.7'
   	
   	// web3j依赖
	compile files('libs/web3sdk.jar')
	runtime files('libs/web3sdk.jar')
   	compile 'org.apache.httpcomponents:httpclient:4.5.5',
            'org.bouncycastle:bcprov-jdk15on:1.54',
            'com.lambdaworks:scrypt:1.4.0',
            'com.squareup:javapoet:1.7.0',
            //'io.reactivex:rxjava:1.2.4',
			'io.reactivex.rxjava2:rxjava:2.2.2',
			'com.github.jnr:jnr-unixsocket:0.15'
	
	///compile files('libs/fiscocc-evidencesdk.jar')
	///runtime files('libs/fiscocc-evidencesdk.jar')
	
    compile files('libs/fiscocc-evidence.jar')
	runtime files('libs/fiscocc-evidence.jar')
}

configurations {
   all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

sourceSets {
	main {
		java {
	        srcDir 'src/main/java'
		}
        resources  {
            srcDir 'src/main/resources'
        }
	}
}

jar {
	destinationDir file('dist/apps')
	archiveName project.name + '.jar'
	exclude '**/*.xml'
	exclude '**/*.properties'
	exclude 'mapper', 'env-prd', 'env-prd-tb', 'env-prd-gtja'

    doLast {
        copy {
            from file('src/main/resources/')
            into 'dist/conf'
            exclude '**/env-prd','**/application.properties','**/applicationContext.xml','**/log4j2.xml'
        }
		copy {
			from file('src/main/resources/env-prd/')
			into 'dist/conf'
		}
		copy {
			from file('src/main/resources/env-prd-tb/')
			into 'dist/conf/env-prd-tb'
		}
		copy {
			from file('src/main/resources/env-prd-gtja/')
			into 'dist/conf/env-prd-gtja'
		}
        copy {
			from file('script/')
			into 'dist/script'
			exclude '**/route-dev'
			exclude '**/route-sit'
		}
		copy {
			from configurations.runtime
			into 'dist/lib'
		}
		copy {
			from file('.').listFiles().findAll{File f -> (f.name.endsWith('.bat') || f.name.endsWith('.sh') || f.name.endsWith('.env'))}
			into 'dist'
		}
	}
}
